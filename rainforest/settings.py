"""
Django settings for rainforest project.

Generated by 'django-admin startproject' using Django 3.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import os
# from decouple import config

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


import dotenv
dotenv.load_dotenv()

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'hux8w)tof6*f!o6n_=o08##kzct1oaigv%&=hk&m^9tmqxix)*'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']





# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'django.contrib.gis',
    'portal',
    'rootApp',
    'import_export',
    'dbbackup',
    'rest_framework',

]



JAZZMIN_SETTINGS = {
    # Site identification (uncomment if needed)
    # "site_title": "AmpPortal Admin",
    # "site_header": "AmpPortal Admin Dashboard", 
    # "site_brand": "AMP LOGISTICS",
    # "welcome_sign": "Welcome to AmpPortal Admin",
    # "copyright": "AmpPortal Â© 2025",
    
    # Sidebar configuration
    "show_sidebar": True,
    "navigation_expanded": False,  # This makes sidebar collapsed by default
    "hide_apps": [],
    "hide_models": [],
    "order_with_respect_to": ["auth", "your_app_name", "another_app"],
    
    # Enable UI builder for testing
    "show_ui_builder": True,

    # Icons configuration
    "icons": {
        "auth": "fas fa-users-cog",
        "auth.user": "fas fa-user", 
        "auth.group": "fas fa-users",
        "your_app.ModelName": "fas fa-boxes",
    },

    # Top menu configuration
    "topmenu_links": [
        # Link to homepage
        {"name": "Home", "url": "/", "permissions": ["auth.view_user"], "new_window": False},

        # Direct model links
        {"model": "auth.User"},
        {"model": "auth.Group"},
        {"model": "admin.LogEntry"},

        # Link to a named Django URL (using reverse())
        {"name": "Dashboard", "url_name": "dashboard", "permissions": ["dashboard.view_dashboard"]},
        
        # Custom API buttons
        {"name": "Generate Farmer Quotas", "url": "generate-farmer-quotas", "permissions": ["auth.view_user"], "new_window": False},
        {"name": "Generate Society Limit", "url": "generate-society-limit", "permissions": ["auth.view_user"], "new_window": False},
    ],

    # User menu configuration  
    "usermenu_links": [
        {"name": "Support", "url": "https://support.example.com", "new_window": True},
    ],
}


JAZZMIN_UI_TWEAKS = {
    # Text size settings
    "navbar_small_text": True,
    "footer_small_text": True, 
    "body_small_text": True,
    "brand_small_text": False,
    
    # Color scheme
    "brand_colour": "navbar-success",
    "accent": "accent-success",
    "navbar": "navbar-success navbar-dark",
    
    # Layout settings
    "no_navbar_border": False,
    "navbar_fixed": False,
    "layout_boxed": False,
    "footer_fixed": False,
    "sidebar_fixed": True,  # Important for sidebar behavior
    
    # Sidebar settings
    "sidebar": "sidebar-light-success",
    "sidebar_nav_small_text": False,
    "sidebar_disable_expand": False,  # Allow expanding/collapsing
    "sidebar_nav_child_indent": False,
    "sidebar_nav_compact_style": True,
    "sidebar_nav_legacy_style": False, 
    "sidebar_nav_flat_style": True,
    
    # Theme settings
    "theme": "default",
    "dark_mode_theme": None,
    
    # Button classes
    "button_classes": {
        "primary": "btn-outline-primary",
        "success": "btn-outline-success",
        "info": "btn-outline-info",
        "warning": "btn btn-warning",
        "danger": "btn-outline-danger",
        "secondary": "btn-outline-secondary"
    },
    
    # Other settings
    "actions_sticky_top": False,
    "use_google_fonts_cdn": True,
    "text_inputs": "form-control", 
    "select_inputs": "form-select"
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'rainforest.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'rainforest.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }


# DATABASES = {
#     'default': {
#         'ENGINE': 'django.contrib.gis.db.backends.postgis',
#         'NAME': 'rainforest',
#         'USER': 'postgres',
#         'PASSWORD':'kwarteng19',
        
#         'HOST':'localhost', 
#         'PORT':'5432'
#     },

# }


# Database
DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': 'forest_db',
        'USER':'postgres',
        'PASSWORD': 'sak@2001server',
        'HOST': 'localhost',
        'PORT': '5432',
    },
   
}



# REST_FRAMEWORK = {
#     'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
#     'PAGE_SIZE': 10
# }

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.contrib.gis.db.backends.postgis',
#         'NAME': 'RAINFOREST',
#         'USER': 'postgres',
#         'PASSWORD':'kwarteng19',
#         'HOST':'localhost', 
#         'PORT':'5432'
#     },

# }


# DATABASES = {
#     'default': {
#         'ENGINE': 'django.contrib.gis.db.backends.postgis',
#         'NAME': 'final_rain',
#         'USER': 'postgres',
#         'PASSWORD':'admin',
#         'HOST':'3.120.135.85', 
#         'PORT':'5432'
#     },

# }

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

# STATIC_URL = '/static/'
# STATIC_ROOT = os.path.join(BASE_DIR, "static/")

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')



# STATIC_ROOT = os.path.join(BASE_DIR, "static/")

# AWS_ACCESS_KEY_ID = 'AKIAJRYVHTJ42YV3ANXQ'
# AWS_SECRET_ACCESS_KEY = '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'
# AWS_STORAGE_BUCKET_NAME = 'eokrain'
# AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME
# AWS_S3_OBJECT_PARAMETERS = {
#     'CacheControl': 'max-age=86400',
# }

# MEDIA_URL = '/media/'
# MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')
# # <-- here is where we reference it
# DEFAULT_FILE_STORAGE = 'clts.storage_backends.MediaStorage'

# DBBACKUP_STORAGE = 'django.core.files.storage.FileSy


# from storages.backends.s3boto3 import S3Boto3Storage

# class MediaStorage(S3Boto3Storage):
#     location = 'media'
#     file_overwrite = False


DBBACKUP_STORAGE = 'django.core.files.storage.FileSystemStorage'
DBBACKUP_STORAGE_OPTIONS = {'location': "%s/backups" %(BASE_DIR)}





# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, 'static/'),
# ]

AWS_ACCESS_KEY_ID = 'AKIAJRYVHTJ42YV3ANXQ'
AWS_SECRET_ACCESS_KEY = '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'
AWS_STORAGE_BUCKET_NAME = 'eokrain'
AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME

AWS_S3_OBJECT_PARAMETERS = {
    'CacheControl': 'max-age=86400',
}

# AWS_LOCATION = 'static'
# STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
# STATIC_URL = "https://%s/%s/" % (AWS_S3_CUSTOM_DOMAIN, AWS_LOCATION)

# DEFAULT_FILE_STORAGE = 'MediaStorage'  # <-- here is where we reference it



LOGIN_URL = '/login/'
LOGOUT_REDIRECT_URL = '/login/'


# pip install boto3
# pip install django-storages

DATA_UPLOAD_MAX_MEMORY_SIZE=5242880